name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: pre-commit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install pre-commit
        run: uv tool install pre-commit --with pre-commit-uv
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run pre-commit
        env:
          SKIP: no-commit-to-branch
        run: |
          echo '```console' > "$GITHUB_STEP_SUMMARY"
          pre-commit run --all-files --show-diff-on-failure --color=always | \
            tee >(sed -E 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})*)?[mGK]//g' >> "$GITHUB_STEP_SUMMARY") >&1
          exit_code="${PIPESTATUS[0]}"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          exit "$exit_code"

  mypy:
    name: mypy
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Sync environment
        run: |
          uv sync --locked
      - name: Check types
        run: |
          uv run --locked mypy src tests

  test:
    name: test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Sync environment
        run: |
          uv sync --locked
      - name: Run tests
        env:
          COVERAGE_CORE: sysmon
        run: |
          uv run --locked \
          coverage run --module \
          pytest
      - name: Check coverage
        run: |
          uv run --locked \
          coverage report
