[project]
name = "tabbit"
version = "0.0.0"
description = "Debate tournament software."
readme = "README.md"
authors = [
    { name = "Tom Kuson", email = "mail@tjkuson.me" }
]
requires-python = "~=3.14.0"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.14",
  "Typing :: Typed",
]
dependencies = [
    "aiosqlite~=0.21.0",
    "fastapi[standard]~=0.119.1",
    "httpx~=0.28.1",
    "pydantic~=2.12",
    "pydantic-settings~=2.11",
    "sqlalchemy[asyncio]~=2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "coverage~=7.11",
    "mypy~=1.18",
    "psutil~=7.1",
    "pytest~=8.4",
    "pytest-asyncio~=1.2",
    "pytest-randomly~=4.0",
    "pytest-xdist~=3.8",
]

[tool.coverage.run]
branch = true
core = "sysmon"
omit = [
    "src/tabbit/config/logger.py",
]
parallel = true
patch = ["subprocess"]

[tool.coverage.report]
fail_under = 100
skip_covered = true
skip_empty = true
show_missing = true

[tool.mypy]
strict_bytes = true
strict = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
plugins = [
    "pydantic.mypy",
]

[tool.pytest.ini_options]
addopts = [
    "--strict-markers",
    "--strict-config",
]
filterwarnings = [
    "error",
]
pythonpath = [
    "src",
]
xfail_strict = true

[tool.ruff.lint]
select = [
    "FAST",
    "YTT",
    "ANN",
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "C4",
    "DTZ",
    "T10",
    "EXE",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "RSE",
    "SLF",
    "SIM",
    "SLOT",
    "TID",
    "ARG",
    "FLY",
    "I",
    "N",
    "PERF",
    "E",
    "W",
    "F",
    "PGH",
    "PL",
    "UP",
    "FURB",
    "RUF",
]

[tool.ruff.lint.per-file-ignores]
"**/test_*" = [
    "S101",  # We can assert in tests.
    "PLR0913",  # Having many arguments is useful for parametrization and avoiding logic in tests.
    "PLR2004",  # Magic values in tests are fine.
]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
datetime = "dt"  # https://adamj.eu/tech/2019/09/12/how-i-import-pythons-datetime-module/

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
